<?xml version="1.0" encoding="UTF-8"?>

<!-- 配置参数 -->
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false -->
<configuration scan="true" scanPeriod="10 seconds">

    <property name="log.path" value="E:/springboot/xagile/logs" />

    <!--spring boot缺省配置-->
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志输出级别 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>TRACE</level>
        </filter>
        <!-- 日志输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <!-- %d表示日期,%thread表示线程名，%-5level：级别从左显示5个字符宽度,%msg：日志消息,%n是换行符-->
            <!--<pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>-->
        </encoder>
    </appender>

    <!--输出到调试日志文件-->
    <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志文件路径及文件名 -->
        <file>${log.path}/debug.log</file>
        <!-- 日志输出格式 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志输出级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>trace</level>
        </filter>
        <!-- 日志滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件名格式-->
            <fileNamePattern>debug.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文件的数量限制，当超过时会删除最早的文件 -->
            <maxHistory>30</maxHistory>
            <!--全部日志文件大小限制 -->
            <totalSizeCap>1GB</totalSizeCap>
            <!--单个日志文件的大小限制，超过时生成新的日志文件-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!--输出到错误日志文件-->
    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志文件路径及文件名 -->
        <file>${log.path}/error.log</file>
        <!-- 日志输出格式 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志输出级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
        </filter>
        <!-- 日志滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件名格式-->
            <fileNamePattern>error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文件的数量限制，当超过时会删除最早的文件 -->
            <maxHistory>30</maxHistory>
            <!--全部日志文件大小限制 -->
            <totalSizeCap>1GB</totalSizeCap>
            <!--单个日志文件的大小限制，超过时生成新的日志文件-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!--springframework.web日志以WARN级别输出-->
    <logger name="org.springframework" level="WARN" />
    <!--hibernate日志以WARN级别输出-->
    <logger name="org.hibernate" level="WARN" />

    <!--开发环境配置-->
    <springProfile name="dev">
        <root level="debug">
            <appender-ref ref="console" />
            <appender-ref ref="debug" />
        </root>
    </springProfile>

    <!--测试环境配置-->
    <springProfile name="junit">
        <root level="INFO">
            <appender-ref ref="console" />
            <appender-ref ref="debug" />
        </root>
    </springProfile>

    <!--生产环境配置-->
    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="debug" />
            <appender-ref ref="error" />
        </root>
    </springProfile>

</configuration>